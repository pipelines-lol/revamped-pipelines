generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("PRISMA_DB_URL")
}

// User and Profile section
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  profileId String?
}

model Profile {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String?
  lastName  String?
  userName  String?
  linkedin  String?
  pfp       String?
  position  String?
  location  String?
  anonymous Boolean?
  school    String?   @db.ObjectId
  created   Boolean?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pipeline Experience[]
  offers   Offer[]
}

model Experience {
  profile      Profile  @relation(fields: [id], references: [id])
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  companyId    String   @db.ObjectId
  companyName  String
  displayName  String
  title        String
  startDate    DateTime
  endDate      DateTime?
  isIndefinite Boolean
  rating       Int
  logo         String
}

model Offer {
  profile      Profile  @relation(fields: [id], references: [id])
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  companyId    String   @db.ObjectId
  companyName  String
  displayName  String
  startDate    DateTime
  endDate      DateTime?
  isIndefinite Boolean
}

// Company and school Section
model Company {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  logo            String
  displayName     String
  description     String
  rating          Int?
  tenure          Int?
  prevCompanies   Json?
  postCompanies   Json?
  Employees       String[] @db.ObjectId
  interns         String[] @db.ObjectId
  ratedEmployees  String[] @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model School {
  id              String  @id @default(auto())  @map("_id") @db.ObjectId
  name            String
  domains         String[]
  state_province  String
  country         String
  alpha_two_code  String
  webpages        String[]
  schoolTally     Json?
  rank            Int
  logo            String
}

// Dashboard Section
model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Email {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}